trigger:
  branches:
    include:
    - master
  paths:
    include:
    - terraform-plan-approve-pipelines.yml
    - assets/terraform/*

variables:
  working_directory: './assets/terraform'
  resource_group_name: 'cdw-myresourcegroup-test'
  location: 'westus2'

stages:

- stage: Production
  jobs:
  - job: Plan
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      displayName: Terraform Plan
      inputs:
        azureSubscription: $(service_connection_name)
        scriptType: bash
        scriptLocation: inlineScript
        addSpnToEnvironment: true
        workingDirectory: $(working_directory)
        inlineScript: |
          export ARM_CLIENT_ID=$servicePrincipalId
          export ARM_CLIENT_SECRET=$servicePrincipalKey
          export ARM_SUBSCRIPTION_ID=$(az account show -o json | jq -r '.id')
          export ARM_TENANT_ID=$(az account show -o json | jq -r '.tenantId')
          
          terraform init \
            -backend-config="storage_account_name=$(tfstate_storage_account_name)" \
            -backend-config="container_name=$(tfstate_container_name)" \
            -backend-config="key=$(tfstate_key)" \
            -backend-config="access_key=$(tfstate_access_key)"

          terraform plan \
            -out $(build.artifactStagingDirectory)/out.tfplan \
            -var 'resource_group_name=$(resource_group_name)' \
            -var 'location=$(location)'

    - publish: $(build.artifactStagingDirectory)
      displayName: Publish Plan
      artifact: terraformplan

  - deployment: Release
    dependsOn: Plan
    pool:
      vmImage: 'ubuntu-latest'
    environment: Production
    strategy:
      runOnce:
        deploy:
          steps:
          - download: terraformplan
            artifact: terraformplan
            displayName: Download Plan
          - task: AzureCLI@2
            displayName: Terraform Apply
            inputs:
              azureSubscription: $(service_connection_name)
              scriptType: bash
              scriptLocation: inlineScript
              addSpnToEnvironment: true
              workingDirectory: $(pipeline.workspace)/terraformplan
              inlineScript: |
                export ARM_CLIENT_ID=$servicePrincipalId
                export ARM_CLIENT_SECRET=$servicePrincipalKey
                export ARM_SUBSCRIPTION_ID=$(az account show -o json | jq -r '.id')
                export ARM_TENANT_ID=$(az account show -o json | jq -r '.tenantId')
                
                terraform init \
                  -backend-config="storage_account_name=$(tfstate_storage_account_name)" \
                  -backend-config="container_name=$(tfstate_container_name)" \
                  -backend-config="key=$(tfstate_key)" \
                  -backend-config="access_key=$(tfstate_access_key)"

                terraform apply out.tfplan