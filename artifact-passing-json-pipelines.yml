trigger:
  branches:
    include:
    - master
  paths:
    include:
    - artifact-passing-json-pipelines.yml

variables:
  skipComponentGovernanceDetection: true

stages:

- stage: Stage_1
  displayName: Stage 1

  jobs:

  - job: Job_S1_J1
    displayName: Stage 1 Job 1
    steps:
    - script: |
        echo "Stage 1, Job 1"
        echo $(jq -n --arg jqVar "*** Some Variable ***" '{myvariable: $jqVar}') > $(build.artifactStagingDirectory)/variables.json
        cat $(build.artifactStagingDirectory)/variables.json
      displayName: Build Pipeline Artifacts
    - publish: $(build.artifactStagingDirectory)
      displayName: Publish Pipeline Artifacts
      artifact: myvariableartifact

  - job: Job_S1_J2
    displayName: Stage 1 Job 2
    dependsOn: Job_S1_J1
    steps:
    - download: current
      artifact: myvariableartifact
      displayName: Download Pipeline Artifacts
    - script: |
        cat $(pipeline.workspace)/myvariableartifact/variables.json
        cat $(pipeline.workspace)/myvariableartifact/variables.json | jq '.myvariable'
        echo "Setting variable..."
        mypath=$(pipeline.workspace)
        echo $mypath
        myvalue=$(cat $mypath/myvariableartifact/variables.json | jq '.myvariable')
        # myvalue=$(cat $(pipeline.workspace)/myvariableartifact/variables.json | jq '.myvariable')
        # myvalue=$(jq '.myvariable' $(pipeline.workspace)/myvariableartifact/variables.json -r)
        echo myValue
      displayName: Check Results

# - stage: Stage_2
#   displayName: Stage 2
#   jobs:

#   - job: Job_S2_J1
#     displayName: Stage 2 Job 1
#     steps:
#     - download: current
#       artifact: myvariableartifact
#       displayName: Download Pipeline Artifacts
#     - script: |
#         cat $(pipeline.workspace)/myvariableartifact/variables.json
#         myValue=$(jq '.myvariable' $(pipeline.workspace)/myvariableartifact/variables.json -r)
#         echo $myValue
#       displayName: Check Results